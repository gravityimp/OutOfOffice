// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OutOfOffice.Server.Data;

#nullable disable

namespace OutOfOffice.Server.Migrations
{
    [DbContext(typeof(OutOfOfficeDbContext))]
    partial class OutOfOfficeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OutOfOffice.Server.Models.ApprovalRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Approver")
                        .HasColumnType("int");

                    b.Property<int>("LeaveRequest")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Approver");

                    b.HasIndex("LeaveRequest");

                    b.ToTable("ApprovalRequests");
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OutOfOfficeBalance")
                        .HasColumnType("int");

                    b.Property<int>("PeoplePartner")
                        .HasColumnType("int");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Subdivision")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeoplePartner");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Employee")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Employee");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("ProjectManager")
                        .HasColumnType("int");

                    b.Property<int>("ProjectType")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManager");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectEmployee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectEmployee");
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.ApprovalRequest", b =>
                {
                    b.HasOne("OutOfOffice.Server.Models.Employee", "ApproverRef")
                        .WithMany("ApprovalRequests")
                        .HasForeignKey("Approver")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OutOfOffice.Server.Models.LeaveRequest", "LeaveRequestRef")
                        .WithMany("ApprovalRequests")
                        .HasForeignKey("LeaveRequest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApproverRef");

                    b.Navigation("LeaveRequestRef");
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.Employee", b =>
                {
                    b.HasOne("OutOfOffice.Server.Models.Employee", "PeoplePartnerRef")
                        .WithMany()
                        .HasForeignKey("PeoplePartner")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PeoplePartnerRef");
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.LeaveRequest", b =>
                {
                    b.HasOne("OutOfOffice.Server.Models.Employee", "EmployeeRef")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("Employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeRef");
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.Project", b =>
                {
                    b.HasOne("OutOfOffice.Server.Models.Employee", "ProjectManagerRef")
                        .WithMany("ManagedProjects")
                        .HasForeignKey("ProjectManager")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectManagerRef");
                });

            modelBuilder.Entity("ProjectEmployee", b =>
                {
                    b.HasOne("OutOfOffice.Server.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OutOfOffice.Server.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.Employee", b =>
                {
                    b.Navigation("ApprovalRequests");

                    b.Navigation("LeaveRequests");

                    b.Navigation("ManagedProjects");
                });

            modelBuilder.Entity("OutOfOffice.Server.Models.LeaveRequest", b =>
                {
                    b.Navigation("ApprovalRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
